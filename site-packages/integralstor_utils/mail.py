
import smtplib
import json
import email.utils
import sqlite3
import sys
import os
from email.mime.text import MIMEText

from integralstor_utils import config, db


def load_email_settings():
    conn = None
    d = None
    try:
        # print '1'
        db_path, err = config.get_db_path()
        # print '2'
        if err:
            raise Exception(err)
        d, err = db.get_single_row(
            db_path, "select * from email_config where id = 1")
        if err:
            raise Exception(err)
    except Exception, e:
        return None, 'Error loading email settings : %s' % str(e)
    else:
        return d, None
    finally:
        if conn:
            conn.close()


def save_email_settings(d):

    conn = None
    try:
        db_path, err = config.get_db_path()
        if err:
            raise Exception(err)
        d1, err = db.get_single_row(db_path, "select * from email_config")
        if err:
            raise Exception(err)
        if d1:
            # Config exists so update
            ret, err = db.execute_iud(db_path, [["update email_config set server=?, port=?, username=?, pswd=?, tls=?, email_alerts=?, email_audit=?, email_quota=?, rcpt_list=? where id = ?", (
                d["server"], d["port"], d["username"], d["pswd"], d["tls"], d["email_alerts"], d["email_audit"], d["email_quota"], d["rcpt_list"], 1,)]])
            if err:
                raise Exception(err)

        else:
            # No config exists so insert
            ret, err = db.execute_iud(db_path, [["insert into email_config (server, port, username, pswd, tls, email_alerts,email_audit,email_quota, rcpt_list, id) values (?,?,?,?,?,?,?,?,?,?)", (
                d["server"], d["port"], d["username"], d["pswd"], d["tls"], d["email_alerts"], d["email_audit"], d["email_quota"], d["rcpt_list"], 1, )]])
            if err:
                raise Exception(err)
    except Exception, e:
        return False, 'Error saving email settings : %s' % str(e)
    else:
        return True, None


def delete_email_settings():
    try:
        db_path, err = config.get_db_path()
        if err:
            raise Exception(err)
        ret, err = db.execute_iud(db_path, [["delete from  email_config "]])
        if err:
            raise Exception(err)
    except Exception, e:
        return False, 'Error deleting email settings : %s' % str(e)
    else:
        return True, None


def send_mail(server, port, username, pswd, tls, rcpt_list, header, body):

    ms = None
    try:
        msg = MIMEText(body)
        msg.set_unixfrom('Integralstor Alerting System')

        if ',' in rcpt_list:
            emails = rcpt_list.split(',')
        else:
            emails = rcpt_list.split(' ')
        to = ','.join(emails)
        # print to
        msg['From'] = email.utils.formataddr(
            ('IntegralView alerting system', "%s@%s" % (username, server)))
        msg['Subject'] = header
        msg['to'] = to
        # print "Sending msg with header \'%s\' and body\' %s\' to %s"%(header,
        # body, emails)

        # print "Opening connection to %s %d"%(server.strip(), port)
        ms = smtplib.SMTP(server, port)
        # print "Opened connection"
        ms.set_debuglevel(True)
        ms.ehlo()
        if tls:
            if ms.has_extn('STARTTLS'):
                ms.starttls()
                ms.ehlo()
        ms.login(username, pswd)
        ms.sendmail('%s@%s' % (username, server), emails, msg.as_string())
    except Exception, e:
        return False, 'Error sending email : %s' % str(e)
    else:
        return True, None
    finally:
        if ms:
            ms.quit()


def main():
    # print "deleting"
    #d = delete_email_settings()
    d, err = load_email_settings()
    # print d
    # print "creating"
    #save_email_settings({"server":"new", "port":22, "username":"newuser", "pswd":"newpass", "tls":True, "email_alerts":False, "rcpt_list":"1@1.com, 2@2.com"})
    # print "created"
    #d,err = load_email_settings()
    # print d['email_alerts']
    # if d["tls"]:
    #  print "tls true"
    # if d["email_alerts"]:
    #  print "email_alerts true"
    # print "updating"
    #save_email_settings({"server":"new1", "port":23, "username":"newuser1", "pswd":"newpass1", "tls":False, "email_alerts":True, "rcpt_list":"11@1.com, 12@2.com"})
    # print "updated"
    #d = load_email_settings()
    # print d
    # if d["tls"]:
    #  print "tls true"
    # if d["email_alerts"]:
    #  print "email_alerts true"
    # print "deleting"
    #d = delete_email_settings()
    #d = load_email_settings()
    # print d
    # print send_mail("testhdr", "testbdy")
    pass
    print send_mail(d['server'], d['port'], d['username'], d['pswd'], d['tls'], d['rcpt_list'], "A Test Header", "Hello World")


if __name__ == "__main__":
    main()


# vim: tabstop=8 softtabstop=0 expandtab ai shiftwidth=4 smarttab
